##############################################################################
# configs/olimex-lpc2378/ostest/Make.defs
#
#   Copyright (C) 2010 Rommel Marcelo. All rights reserved.
#   Author: Rommel Marcelo
#
#	Copyright (C) 2012 Freddie Chopin <freddie.chopin@gmail.com>
#
# This is part of the NuttX RTOS and based on the LPC2148 port:
#
#   Copyright (C) 2010 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
##############################################################################

include ${TOPDIR}/.config
include ${TOPDIR}/tools/Config.mk
include ${TOPDIR}/Includes.mk

# Setup for the selected toolchain

ifeq ($(CONFIG_OLIMEX_LPC2378_CODESOURCERYW),y)
  # CodeSourcery under Windows
  CROSSDEV = arm-none-eabi-
  WINTOOL = y
  MAXOPTIMIZATION = -O2
endif
ifeq ($(CONFIG_OLIMEX_LPC2378_CODESOURCERYL),y)
  # CodeSourcery under Linux
  CROSSDEV = arm-none-eabi-
  MAXOPTIMIZATION = -O2
endif
ifeq ($(CONFIG_OLIMEX_LPC2378_DEVKITARM),y)
  # devkitARM under Windows
  CROSSDEV = arm-eabi-
  WINTOOL = y
endif
ifeq ($(CONFIG_OLIMEX_LPC2378_BUILDROOT),y)
  # NuttX buildroot under Linux or Cygwin
  CROSSDEV = arm-nuttx-elf-
  MAXOPTIMIZATION = -Os
endif

ifeq ($(WINTOOL),y)
  # Windows-native toolchains
  DIRLINK = $(TOPDIR)/tools/winlink.sh
  DIRUNLINK = $(TOPDIR)/tools/unlink.sh
  MKDEP = $(TOPDIR)/tools/mknulldeps.sh
  ARCHINCLUDES = -I. ${patsubst %,-isystem "${shell cygpath -w %}",$(GLOBAL_SYSTEM_INCLUDES)} \
	${patsubst %,-I"${shell cygpath -w %}",$(GLOBAL_INCLUDES)}
  ARCHXXINCLUDES = -I. ${patsubst %,-isystem "${shell cygpath -w %}",$(GLOBAL_SYSTEM_CXX_INCLUDES)} \
	${patsubst %,-I"${shell cygpath -w %}",$(GLOBAL_CXX_INCLUDES)}
  ARCHSCRIPT = -T "${shell cygpath -w $(TOPDIR)/configs/$(CONFIG_ARCH_BOARD)/scripts/ld.script}"
else
  # Linux/Cygwin-native toolchain 
  MKDEP = $(TOPDIR)/tools/mkdeps.sh
  ARCHINCLUDES = -I. ${patsubst %,-isystem %,$(GLOBAL_SYSTEM_INCLUDES)} ${patsubst %,-I%,$(GLOBAL_INCLUDES)}
  ARCHXXINCLUDES = -I. ${patsubst %,-isystem %,$(GLOBAL_SYSTEM_CXX_INCLUDES)} ${patsubst %,-I%,$(GLOBAL_CXX_INCLUDES)}
  ARCHSCRIPT = -T$(TOPDIR)/configs/$(CONFIG_ARCH_BOARD)/scripts/ld.script
endif

CC = $(CROSSDEV)gcc
CXX = $(CROSSDEV)g++
CPP = $(CROSSDEV)gcc -E
LD = $(CROSSDEV)ld
AR = $(CROSSDEV)ar rcs
NM = $(CROSSDEV)nm
OBJCOPY = $(CROSSDEV)objcopy
OBJDUMP = $(CROSSDEV)objdump

ARCHCCVERSION = ${shell $(CC) -v 2>&1 | sed -n '/^gcc version/p' | sed -e 's/^gcc version \([0-9\.]\)/\1/g' -e 's/[-\ ].*//g' -e '1q'}
ARCHCCMAJOR = ${shell echo $(ARCHCCVERSION) | cut -d'.' -f1}

ifeq ($(ARCHCCMAJOR),4)
ifneq ($(HOSTOS),Cygwin)
OBJCOPYARGS		= -R .note -R .note.gnu.build-id -R .comment
endif
endif

ifeq ("${CONFIG_DEBUG}","y")
  ARCHOPTIMIZATION	= -g
else
  ARCHOPTIMIZATION	= $(MAXOPTIMIZATION) -fno-strict-aliasing -fno-strength-reduce -fomit-frame-pointer
endif

ifeq ($(ARCHCCMAJOR),4)
  ARCHCPUFLAGS		= -mcpu=arm7tdmi -mfloat-abi=soft
else
  ARCHCPUFLAGS		= -mapcs-32 -mcpu=arm7tdmi -msoft-float
endif

ARCHCFLAGS		= -fno-builtin
ARCHCXXFLAGS		= -fno-builtin -fno-exceptions
ARCHPICFLAGS		= -fpic -msingle-pic-base -mpic-register=r10
ARCHWARNINGS		= -Wall -Wstrict-prototypes -Wshadow
ARCHWARNINGSXX		= -Wall -Wshadow
ARCHDEFINES		=

CFLAGS			= $(ARCHCFLAGS) $(ARCHWARNINGS) $(ARCHOPTIMIZATION) \
			  $(ARCHCPUFLAGS) $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES) -pipe
CPICFLAGS		= $(ARCHPICFLAGS) $(CFLAGS)
CXXFLAGS		= $(ARCHCXXFLAGS) $(ARCHWARNINGSXX) $(ARCHOPTIMIZATION) \
			  $(ARCHCPUFLAGS) $(ARCHXXINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES) -pipe
CXXPICFLAGS		= $(ARCHPICFLAGS) $(CXXFLAGS)
CPPFLAGS		= $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRADEFINES)
AFLAGS			= $(CFLAGS) -D__ASSEMBLY__

NXFLATLDFLAGS1		= -r -d -warn-common
NXFLATLDFLAGS2		= $(NXFLATLDFLAGS1) \
			  -T$(TOPDIR)/binfmt/libnxflat/gnu-nxflat-gotoff.ld \
			  -no-check-sections
LDNXFLATFLAGS		= -e main -s 2048

OBJEXT			= .o
LIBEXT			= .a
EXEEXT			=

ifneq ($(CROSSDEV),arm-nuttx-elf-)
  LDFLAGS		+= -nostartfiles -nodefaultlibs
endif
ifeq ($(CONFIG_DEBUG),y)
  LDFLAGS		+= -g
endif


HOSTCC			= gcc
HOSTINCLUDES		= -I.
HOSTCFLAGS		= -Wall -Wstrict-prototypes -Wshadow -g -pipe
HOSTLDFLAGS		=

